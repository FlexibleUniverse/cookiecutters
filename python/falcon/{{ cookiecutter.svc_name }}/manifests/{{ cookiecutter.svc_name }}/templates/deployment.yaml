---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ "{{" }} .Values.{{ cookiecutter.svc_name }}.name {{ "}}" }}
  name: {{ "{{" }} .Values.{{ cookiecutter.svc_name }}.name {{ "}}" }}
  namespace: sre
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ "{{" }}  .Values.{{ cookiecutter.svc_name }}.name {{ "}}" }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ "{{" }} .Values.{{ cookiecutter.svc_name }}.name {{ "}}" }}
    spec:
      containers:
      - name: {{ "{{" }} .Values.{{ cookiecutter.svc_name }}.name {{ "}}" }}
        image:  "{{ '{{' }} .Values.image.repository {{ '}}' }}:{{ '{{' }} .Values.image.tag {{ '}}' }}"
        imagePullPolicy: IfNotPresent
        command:
          - "./venv/bin/gunicorn"
        args:
          - -c
          - {{ cookiecutter.svc_name }}/config/{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.environment {{ "}}" }}.py
          - {{ cookiecutter.svc_name }}.server:app
        ports:
        - containerPort: {{ cookiecutter.port }}
          name: http
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVICE_NAME
          value: {{ "{{" }} .Values.{{ cookiecutter.svc_name }}.name }}
        - name: EVENTS_ENDPOINT
          value: '{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.cdp.endpoint {{ "}}" }}'
        readinessProbe:
          httpGet:
            port: {{ cookiecutter.port }}
            path: "/hc"
          timeoutSeconds: 5
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
          requests:
            cpu: '{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.resources.requests.cpu {{ "}}" }}'
            memory: '{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.resources.requests.memory {{ "}}" }}'
          limits:
            cpu: '{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.resources.limits.cpu {{ "}}" }}'
            memory: '{{ "{{" }} .Values.{{ cookiecutter.svc_name }}.resources.limits.memory {{ "}}" }}'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
